---
title: "LinearRegression"
author: "Ben, Andrew, Pranati, Filip"
format: 
  html:
    self-contained: true
    code-tools: true
    toc: true
    number-sections: true
editor: source
execute: 
  error: true
  echo: false
  message: false
  warning: false
---

## Setup
```{r setup}
library(tidyverse)
library(plotly)
```

## Data

```{r}
CO2 <- read_csv("co2_emissions_tonnes_per_person.csv", col_select = c(1, 152:220))
mhi <- read_csv("mhhinc.csv", col_select = c(1, 152:220))


mhi <- mhi %>%
  mutate_at(vars(-1), function(x) {
    x <- ifelse(str_detect(x, "k"), 
                as.numeric(str_replace_all(x, "k", "")) * 1000, 
                as.numeric(x))
    return(x)
})

mhi <- pivot_longer(
  mhi, cols = 2:70, names_to = "year", values_to = "mean_income",
  values_transform = list(mean_income = as.double)
    )
CO2 <- pivot_longer(CO2, cols = 2:70, names_to = "year", values_to = "co2")

mhi_CO2 <- mhi %>% 
  full_join(CO2, by = join_by(country, year))
```

## Data Visualization

```{r}
co2_income_plot <- mhi_CO2 %>% 
  ggplot(mapping = aes(x = mean_income, y = co2, color = country)) +
  geom_line(show.legend = FALSE, linejoin = "round") +
  labs(
    x = "Mean Household Income [International $]",
    y = "",
    title = "Carbon Dioxide Produced vs Mean Household Income"
  )

interactive_co2_income_plot <- ggplotly(co2_income_plot) %>% 
  layout(title = list(text = paste0(
    "Carbon Dioxide Produced vs Mean Household Income",
    "<br>",
    "<sup>",
    "Carbon Dioxide Produced per Person [Metric Tonnes]",
    "</sup>")))
interactive_co2_income_plot

time_plot <- mhi_CO2 %>% 
  mutate(
    co2_per_income = co2/mean_income
  ) %>% 
  ggplot(mapping = aes(x = year, y = co2_per_income, color = country, fill = country)) +
  geom_col(position = "dodge", show.legend = FALSE) +
  scale_x_discrete(
    breaks = c("1950", "1960", "1970", "1980", "1990", "2000", "2010", "2018")
    ) +
  labs(
    x = "Year",
    y = "",
    title = "Metric Tons of Carbon Dioxide Produced per Person by Mean Household Income per Year"
  )

interactive_time_plot <- ggplotly(time_plot) %>% 
  layout(title = list(text = paste0(
    "Carbon Dioxide Produced per Person by Mean Household Income per Year",
    "<br>",
    "<sup>",
    "Carbon Dioxide Produced per Person by Mean Household Income [Metric Tonnes / International $]",
    "</sup>")))
  
interactive_time_plot
```

The two plots shown are interactive plots of Carbon Dioxide Produced per Person vs. Mean Household Income and Carbon Dioxide Produced per Person by Mean Household Income per Year, respectively. The first plot shows Mean Household Income on the x-axis and metric tonnes of Carbon Dioxide produced per person on the y-axis. This plot shows how increasing income affects the amount of CO2 produced per person. The second plot shows the change in graph one over time, from 1950 to 2018. This plot shows how the ratio of CO2 produced over mean household income has changed over the last 68 years.

## Linear Regression

```{r}
model <- lm(co2 ~ mean_income, data = mhi_CO2)
summary(model)
```

Linear regression involves modeling the relationship between variables in a dataset in a scalar way. A linear model in the form yi = β0 +  β1xi + ε is used to describe the relationship between each explanatory variable to the response accounting for random error. In this study, mean income is the explanatory variable and predicted co2 level is the response, so the model attempts to explain how changes in mean income increase or decrease predicted(co2) levels. 

$Predicted(co2) = 1.163 + .0006679(mean income)$

For every one unit increase in mean income(measured in standardized international dollar units), we expect a .0006679 increase in co2 emission levels(measured in metric tons), or 1.47 lb increase.

Our model has an r value of .578, which shows a moderate, positive linear relationship between yearly CO2 emissions and mean household income. Our R^2 value(.3341) shows that household income only accounts for 33.41% of variation in CO2 emissions. This is not very strong, and we would want to look to manipulate our current variables or add more explanatory variables to make our model stronger.

## Model Fit
